# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url forpamm the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:8889/collect-api?useSSL=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true


# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
spring.thymeleaf.cache=false
spring.servlet.multipart.enabled=true

file.upload-dir=./src/main/resources/static/downloadFile
spring.servlet.multipart.max-request-size=200MB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.file-size-threshold=10KB


# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select name, password, active from user where name=?
spring.queries.roles-query=select u.name, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.name=?
#spring.queries.roles-query=select u.email, r.role from user u, role r where u.role= r.role_id and u.email=?
#spring.queries.roles-query=select r.role from user_role ur inner join role r on r.role_id=ur.role_id where ur.user_id=u.user_id and u.email=?
# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always

spring.jackson.serialization.fail_on_empty_beans=false

# = smtp server config
spring.mail.host=mocha6007.mochahost.com
spring.mail.port=2525
spring.mail.username=derteuffel0@yesbanana
spring.mail.password=breakofdawn
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com